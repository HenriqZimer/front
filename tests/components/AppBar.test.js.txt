import AppBar from '../../src/components/Shared/AppBar.vue';
import { mount } from '@vue/test-utils';
import { describe, it, expect } from 'vitest';
import { createVuetify } from 'vuetify';
import 'vuetify/styles';
import { aliases, mdi } from 'vuetify/iconsets/mdi';

const vuetify = createVuetify({
  icons: {
    defaultSet: 'mdi',
    aliases,
    sets: { mdi },
  },
});

describe('AppBar', () => {
  const mountComponent = () =>
    mount(AppBar, {
      global: {
        plugins: [vuetify],
      },
    });

  it('deve renderizar corretamente', () => {
    const wrapper = mountComponent();
    expect(wrapper.exists()).toBe(true);
  });

  it('deve conter o botão Home', () => {
    const wrapper = mountComponent();
    const homeButton = wrapper.find('[to="/"]');
    expect(homeButton.exists()).toBe(true);
    expect(homeButton.text()).toContain('Home');
  });

  it('deve renderizar os links dinâmicos corretamente', () => {
    const wrapper = mountComponent();
    
    // Filtra apenas os botões dinâmicos
    const dynamicLinks = wrapper.findAll('.nav-btn:not([to="/"])');
  
    // Verifica que o número correto de links está presente
    expect(dynamicLinks).toHaveLength(4);
  
    // Extrai o texto diretamente do botão
    const texts = dynamicLinks.map((link) => {
      const buttonText = link.text().trim(); // Garante que pegamos o texto completo e limpo
      return buttonText.replace(/^mdi-\S+\s/, ''); // Remove o ícone do início (se houver)
    });
  
    // Verifica se os textos estão corretos
    expect(texts).toEqual(['Usuários', 'Carros', 'Aluguéis', 'Pagamentos']);
  });
});
